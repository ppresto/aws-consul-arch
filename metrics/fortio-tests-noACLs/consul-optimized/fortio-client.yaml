apiVersion: v1
kind: ServiceAccount
metadata:
  name: fortio-client
  namespace: fortio-consul-optimized
---
apiVersion: v1
kind: Service
metadata:
  name: fortio-client
  namespace: fortio-consul-optimized
spec:
  selector:
    app: fortio-client
  ports:
  - port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: fortio-consul-optimized
  labels:
    app: fortio-client
  name: fortio-client
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fortio-client
  template:
    metadata:
      namespace: fortio-consul-optimized
      annotations:
        'consul.hashicorp.com/connect-inject': 'true'
        'consul.hashicorp.com/transparent-proxy': 'false'
        consul.hashicorp.com/connect-service-upstreams: 'fortio-server-defaults:8080, fortio-server-defaults-grpc:8079'
        'consul.hashicorp.com/consul-envoy-proxy-concurrency': '2'
        'consul.hashicorp.com/sidecar-proxy-cpu-limit': '750m' # 35% of a CPU
        'consul.hashicorp.com/sidecar-proxy-cpu-request': '750m'
        'consul.hashicorp.com/sidecar-proxy-memory-limit': '100Mi'
        'consul.hashicorp.com/sidecar-proxy-memory-request': '100Mi'
      labels:
        app: fortio-client
    spec:
      containers:
      - name: fortio
        image: fortio/fortio:latest_release
        env:       
        ports:
        - containerPort: 8080
          name: http-fortio
        - containerPort: 8079
          name: grpc-ping        
        volumeMounts:
        - name: reports
          mountPath: /var/lib/fortio
      volumes:
      - name: reports
        emptyDir:
            medium: Memory
      serviceAccountName: fortio-client
      nodeSelector:
        nodegroup: services